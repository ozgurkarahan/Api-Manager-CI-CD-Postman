{
	"info": {
		"_postman_id": "1ae0dfde-f846-41ef-b77e-fd3f7c412f7e",
		"name": "CI/CD Create Proxy API - Api Manager",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "0.1 - Get  Access Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "031bf449-1d0b-4085-9982-7a54d8b43ea6",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "client_id",
							"value": "{{connected_app_id}}",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "{{connected_app_secret}}",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{anypoint_host}}/accounts/api/v2/oauth2/token",
					"host": [
						"{{anypoint_host}}"
					],
					"path": [
						"accounts",
						"api",
						"v2",
						"oauth2",
						"token"
					]
				},
				"description": "This request :\n- gets acces_token for the connected app that I have created in Anypoint Platform.\n- sets the acces_token postman environment variable to use for the following requests\n\nclient credentials grant type"
			},
			"response": []
		},
		{
			"name": "0.2 - Get Profile (org Id and Sandbox Env Id)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "911e8d0d-5bf8-4849-894e-366636348086",
						"exec": [
							"var envName = pm.environment.get(\"env_name\");",
							"var orgName = pm.environment.get(\"org_name\");",
							"",
							"var jsonData = pm.response.json();",
							"",
							"var env = jsonData.organization[\"environments\"].filter(env => env.name == envName);",
							"var org = jsonData[\"memberOfOrganizations\"].filter(org => org.name == orgName);",
							"",
							"postman.setEnvironmentVariable(\"env_id\", env[0].id);",
							"postman.setEnvironmentVariable(\"org_id\", org[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{access_token}}",
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
					}
				],
				"url": {
					"raw": "{{anypoint_host}}/accounts/api/profile",
					"host": [
						"{{anypoint_host}}"
					],
					"path": [
						"accounts",
						"api",
						"profile"
					]
				},
				"description": "This request:\n- gets org information\n- parse the result and search org_id by org_name and env_id by env_name\n- sets the org_id and env_id in postman environment variables\n\nYou need to fill the org_name and env_name in postman environment variables\n- org_name: is the business org name to which you want to depoy ex: Ozgur Business Organisation\n- env_name: is the environement name to which you want to deplay ex: Sandbox"
			},
			"response": []
		},
		{
			"name": "1 - Upload swagger to Exchange",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "555e8926-b685-4715-a4f2-4c40a003a678",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					},
					{
						"key": "organisationId",
						"value": "{{org_id}}",
						"type": "text"
					},
					{
						"key": "classifier",
						"value": "oas",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "classifier",
							"value": "oas",
							"type": "text"
						},
						{
							"key": "organizationId",
							"value": "{{org_id}}",
							"type": "text"
						},
						{
							"key": "groupId",
							"value": "{{org_id}}",
							"type": "text"
						},
						{
							"key": "assetId",
							"value": "{{exchangeAssetId}}",
							"type": "text"
						},
						{
							"key": "version",
							"value": "1.0.0",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{exchangeAssetId}}",
							"type": "text"
						},
						{
							"key": "classifier",
							"value": "oas",
							"type": "text"
						},
						{
							"key": "apiVersion",
							"value": "v1",
							"type": "text"
						},
						{
							"key": "main",
							"value": "petstore_oas.json",
							"type": "text"
						},
						{
							"key": "asset",
							"type": "file",
							"src": "petstore_oas.json"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{anypoint_host}}/exchange/api/v1/assets",
					"host": [
						"{{anypoint_host}}"
					],
					"path": [
						"exchange",
						"api",
						"v1",
						"assets"
					]
				},
				"description": "This request:\n- uploads your swagger file to echange\n\nyou need to set your swagger path and api metadata information in body of the request."
			},
			"response": []
		},
		{
			"name": "2 - Create an Api From Exchange",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3e6edb2e-009a-4b4b-a3d4-84e81998c26c",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"apiId\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"endpoint\": {\n        \"deploymentType\": \"CH\",\n        \"isCloudHub\": true,\n        \"muleVersion4OrAbove\": true,\n        \"proxyUri\": \"http://0.0.0.0:8081/\",\n        \"proxyTemplate\": {\n            \"assetVersion\": \"2.1.0\"\n        },\n        \"referencesUserDomain\": false,\n        \"responseTimeout\": null,\n        \"type\": \"rest\",\n        \"uri\": \"https://petstore.swagger.io/v2\",\n        \"validation\": \"ENABLED\"\n    },\n    \"providerId\": null,\n     \"tags\": [\n        \"internal\",\n        \"test\"\n    ],\n    \"instanceLabel\": \"Sandbox {{exchangeAssetId}}\",\n    \"spec\": {\n        \"assetId\": \"{{exchangeAssetId}}\",\n        \"groupId\": \"{{org_id}}\",\n        \"version\": \"1.0.0\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{anypoint_host}}/apimanager/api/v1/organizations/:organizationId/environments/:environmentId/apis/",
					"host": [
						"{{anypoint_host}}"
					],
					"path": [
						"apimanager",
						"api",
						"v1",
						"organizations",
						":organizationId",
						"environments",
						":environmentId",
						"apis",
						""
					],
					"variable": [
						{
							"key": "organizationId",
							"value": "{{org_id}}"
						},
						{
							"key": "environmentId",
							"value": "{{env_id}}"
						}
					]
				},
				"description": "This request:\n- creates an API in Api Manager from an existing Exchange API (check body of the request)\n\t\t\"spec\": {\n    \t\"assetId\": \"{{exchangeAssetId}}\",\n        \"groupId\": \"{{org_id}}\",\n        \"version\": \"1.0.0\"\n    \t}\n- sets the apiId postman environment variable (this is the id of the api in api manager)"
			},
			"response": []
		},
		{
			"name": "3 - Deploy proxy for an existing api",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1f527a9a-ff86-4a1e-9b4b-f83ffa92bd7f",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"proxyId\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"applicationName\": \"{{domainName}}\",\n    \"gatewayVersion\": \"4.3.0\",\n    \"overwrite\": true,\n    \"type\": \"CH\",\n    \"environmentId\": \"{{env_id}}\",\n    \"environmentName\": \"{{env_name}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{anypoint_host}}/proxies/xapi/v1/organizations/:orgId/environments/:envId/apis/:apiId/deployments",
					"host": [
						"{{anypoint_host}}"
					],
					"path": [
						"proxies",
						"xapi",
						"v1",
						"organizations",
						":orgId",
						"environments",
						":envId",
						"apis",
						":apiId",
						"deployments"
					],
					"variable": [
						{
							"key": "orgId",
							"value": "{{org_id}}"
						},
						{
							"key": "envId",
							"value": "{{env_id}}"
						},
						{
							"key": "apiId",
							"value": "{{apiId}}"
						}
					]
				},
				"description": "This request:\n- creates a proxy for the given apiId, domainName(must be unique, it is part of your api url), env_id and env_name"
			},
			"response": []
		},
		{
			"name": "3.1 - Proxy from Runtime Manager",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aeaaaa50-f15b-4ff7-b9d9-e760a83301cb",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"fullDomainName\", jsonData.fullDomain);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "X-ANYPNT-ENV-ID",
						"value": "{{env_id}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{anypoint_host}}/cloudhub/api/v2/applications/{{domainName}}",
					"host": [
						"{{anypoint_host}}"
					],
					"path": [
						"cloudhub",
						"api",
						"v2",
						"applications",
						"{{domainName}}"
					]
				},
				"description": "this request:\n- retreives the proxy API instance information from the runtime manager. \n- sets the fullDomainName postman environment variable"
			},
			"response": []
		},
		{
			"name": "4 - Add premium SLA tiers to an existing api",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\": \"ACTIVE\",\n    \"autoApprove\": false,\n    \"limits\": [\n      {\n        \"visible\": true,\n        \"maximumRequests\": 5,\n        \"timePeriodInMilliseconds\": 1\n      }\n    ],\n    \"name\": \"premium\",\n    \"description\": \"premium description\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{anypoint_host}}/apimanager/api/v1/organizations/:organizationId/environments/:environementId/apis/:apiId/tiers",
					"host": [
						"{{anypoint_host}}"
					],
					"path": [
						"apimanager",
						"api",
						"v1",
						"organizations",
						":organizationId",
						"environments",
						":environementId",
						"apis",
						":apiId",
						"tiers"
					],
					"variable": [
						{
							"key": "organizationId",
							"value": "{{org_id}}"
						},
						{
							"key": "environementId",
							"value": "{{env_id}}"
						},
						{
							"key": "apiId",
							"value": "{{apiId}}"
						}
					]
				},
				"description": "This request:\n- creates an SLA tier for an API (apiId). Body:\n\t    {\n\t\t\"status\": \"ACTIVE\",\n\t    \"autoApprove\": false,\n\t    \"limits\": [\n\t      {\n\t        \"visible\": true,\n\t        \"maximumRequests\": 5,\n\t        \"timePeriodInMilliseconds\": 1\n\t      }\n\t    ],\n\t    \"name\": \"premium\",\n\t    \"description\": \"premium description\"\n\t\t}"
			},
			"response": []
		},
		{
			"name": "4.1 - Add free SLA tiers to an existing api",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\": \"ACTIVE\",\n    \"autoApprove\": true,\n    \"limits\": [\n      {\n        \"visible\": true,\n        \"maximumRequests\": 2,\n        \"timePeriodInMilliseconds\": 1000\n      },\n      {\n        \"visible\": true,\n        \"maximumRequests\": 50,\n        \"timePeriodInMilliseconds\": 60000\n      }\n    ],\n    \"name\": \"Free\",\n    \"description\": \"Free description\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{anypoint_host}}/apimanager/api/v1/organizations/:organizationId/environments/:environementId/apis/:apiId/tiers",
					"host": [
						"{{anypoint_host}}"
					],
					"path": [
						"apimanager",
						"api",
						"v1",
						"organizations",
						":organizationId",
						"environments",
						":environementId",
						"apis",
						":apiId",
						"tiers"
					],
					"variable": [
						{
							"key": "organizationId",
							"value": "{{org_id}}"
						},
						{
							"key": "environementId",
							"value": "{{env_id}}"
						},
						{
							"key": "apiId",
							"value": "{{apiId}}"
						}
					]
				},
				"description": "This request:\n- creates an SLA tier for an API (apiId)."
			},
			"response": []
		},
		{
			"name": "4.2 - SLA tiers from an existing api",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{anypoint_host}}/apimanager/api/v1/organizations/:organizationId/environments/:environementId/apis/:apiId/tiers",
					"host": [
						"{{anypoint_host}}"
					],
					"path": [
						"apimanager",
						"api",
						"v1",
						"organizations",
						":organizationId",
						"environments",
						":environementId",
						"apis",
						":apiId",
						"tiers"
					],
					"variable": [
						{
							"key": "organizationId",
							"value": "{{org_id}}"
						},
						{
							"key": "environementId",
							"value": "{{env_id}}"
						},
						{
							"key": "apiId",
							"value": "{{apiId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "5 - Apply Rate limiting SLA Based policy to an existing api",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"configurationData\": {\n        \"clientIdExpression\": \"#[attributes.headers['client_id']]\",\n        \"clientSecretExpression\": \"#[attributes.headers['client_secret']]\",\n        \"clusterizable\": true,\n        \"exposeHeaders\": true\n    },\n    \"id\": null,\n    \"pointcutData\": null,\n    \"policyTemplateId\": 299249,\n    \"apiVersionId\": \"{{apiID}}\",\n    \"groupId\": \"68ef9520-24e9-4cf2-b2f5-620025690913\",\n    \"assetId\": \"rate-limiting-sla-based\",\n    \"assetVersion\": \"1.2.6\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{anypoint_host}}/apimanager/api/v1/organizations/:organizationId/environments/:environementId/apis/:apiid/policies",
					"host": [
						"{{anypoint_host}}"
					],
					"path": [
						"apimanager",
						"api",
						"v1",
						"organizations",
						":organizationId",
						"environments",
						":environementId",
						"apis",
						":apiid",
						"policies"
					],
					"variable": [
						{
							"key": "organizationId",
							"value": "{{org_id}}"
						},
						{
							"key": "environementId",
							"value": "{{env_id}}"
						},
						{
							"key": "apiid",
							"value": "{{apiId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "5.1 - Add Tag to an existing api #ratelimitingSLAbased",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{access_token}}",
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"url": {
					"raw": "{{anypoint_host}}/apimanager/api/v1/organizations/:organizationId/environments/:environementId/apis/:apiId/tags/ratelimitingSLAbased",
					"host": [
						"{{anypoint_host}}"
					],
					"path": [
						"apimanager",
						"api",
						"v1",
						"organizations",
						":organizationId",
						"environments",
						":environementId",
						"apis",
						":apiId",
						"tags",
						"ratelimitingSLAbased"
					],
					"variable": [
						{
							"key": "organizationId",
							"value": "{{org_id}}"
						},
						{
							"key": "environementId",
							"value": "{{env_id}}"
						},
						{
							"key": "apiId",
							"value": "{{apiId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "5.2 - Apply Jwt validation policy to an existing api",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"configurationData\": {\n        \"jwtOrigin\": \"httpBearerAuthenticationHeader\",\n        \"jwtExpression\": \"#[attributes.headers['jwt']]\",\n        \"signingMethod\": \"rsa\",\n        \"signingKeyLength\": 256,\n        \"jwtKeyOrigin\": \"jwks\",\n        \"textKey\": \"your-(256|384|512)-bit-secret\",\n        \"jwksUrl\": \"http://your-jwks-service.example:80/base/path\",\n        \"jwksServiceTimeToLive\": 60,\n        \"skipClientIdValidation\": true,\n        \"clientIdExpression\": \"#[vars.claimSet.client_id]\",\n        \"validateAudClaim\": true,\n        \"mandatoryAudClaim\": false,\n        \"supportedAudiences\": \"aud.example.com\",\n        \"mandatoryExpClaim\": true,\n        \"mandatoryNbfClaim\": false,\n        \"validateCustomClaim\": true,\n        \"mandatoryCustomClaims\": [\n            {\n                \"key\": \"Mandatory\",\n                \"value\": \"true\"\n            }\n        ],\n        \"nonMandatoryCustomClaims\": [\n            {\n                \"key\": \"NonMandatory\",\n                \"value\": \"false\"\n            }\n        ]\n    },\n    \"id\": null,\n    \"pointcutData\": null,\n    \"policyTemplateId\": 299253,\n    \"apiVersionId\": {{apiId}},\n    \"groupId\": \"68ef9520-24e9-4cf2-b2f5-620025690913\",\n    \"assetId\": \"jwt-validation\",\n    \"assetVersion\": \"1.1.3\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{anypoint_host}}/apimanager/api/v1/organizations/:organizationId/environments/:environementId/apis/:apiid/policies",
					"host": [
						"{{anypoint_host}}"
					],
					"path": [
						"apimanager",
						"api",
						"v1",
						"organizations",
						":organizationId",
						"environments",
						":environementId",
						"apis",
						":apiid",
						"policies"
					],
					"variable": [
						{
							"key": "organizationId",
							"value": "{{org_id}}"
						},
						{
							"key": "environementId",
							"value": "{{env_id}}"
						},
						{
							"key": "apiid",
							"value": "{{apiId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "5.3 - Add Tag to an existing api #jwt",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{access_token}}",
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"url": {
					"raw": "{{anypoint_host}}/apimanager/api/v1/organizations/:organizationId/environments/:environementId/apis/:apiId/tags/jwt",
					"host": [
						"{{anypoint_host}}"
					],
					"path": [
						"apimanager",
						"api",
						"v1",
						"organizations",
						":organizationId",
						"environments",
						":environementId",
						"apis",
						":apiId",
						"tags",
						"jwt"
					],
					"variable": [
						{
							"key": "organizationId",
							"value": "{{org_id}}"
						},
						{
							"key": "environementId",
							"value": "{{env_id}}"
						},
						{
							"key": "apiId",
							"value": "{{apiId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "5.4 - Get Api(s) By query (tag name)",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{anypoint_host}}/apimanager/api/v1/organizations/:organizationId/environments/:environmentId/apis?query=jwt",
					"host": [
						"{{anypoint_host}}"
					],
					"path": [
						"apimanager",
						"api",
						"v1",
						"organizations",
						":organizationId",
						"environments",
						":environmentId",
						"apis"
					],
					"query": [
						{
							"key": "query",
							"value": "jwt"
						}
					],
					"variable": [
						{
							"key": "organizationId",
							"value": "{{org_id}}"
						},
						{
							"key": "environmentId",
							"value": "{{env_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Optional - Enable monitoring/visualiser in Runtime Manager",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{access_token}}",
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"monitoringEnabled\": true,\n    \"monitoringAutoRestart\": true,\n    \"persistentQueues\": false,\n    \"persistentQueuesEncrypted\": false,\n    \"workers\": {\n        \"type\": {\n            \"name\": \"Micro\",\n            \"weight\": 0.1,\n            \"cpu\": \"0.1 vCores\",\n            \"memory\": \"500 MB memory\"\n        },\n        \"amount\": 1,\n        \"remainingOrgWorkers\": 3.1,\n        \"totalOrgWorkers\": 4\n    },\n    \"trackingSettings\": {\n        \"trackingLevel\": \"DISABLED\"\n    },\n    \"properties\": {\n        \"anypoint.platform.analytics_base_uri\": \"https://analytics-ingest.anypoint.mulesoft.com\",\n        \"anypoint.platform.client_id\": \"{{environment_app_id}}\",\n        \"anypoint.platform.client_secret\": \"{{environment_app_secret}}\",\n        \"anypoint.platform.base_uri\": \"{{anypoint_host}}\",\n        \"anypoint.platform.config.analytics.agent.enabled\": \"true\"\n    },\n    \"logLevels\": [],\n    \"propertiesOptions\": {\n        \"outbound.truststore.password\": {\n            \"secure\": true\n        },\n        \"anypoint.platform.client_secret\": {\n            \"secure\": true\n        },\n        \"inbound.keystore.password\": {\n            \"secure\": true\n        },\n        \"inbound.truststore.password\": {\n            \"secure\": true\n        },\n        \"outbound.keystore.password\": {\n            \"secure\": true\n        },\n        \"inbound.keystore.keyPassword\": {\n            \"secure\": true\n        },\n        \"outbound.keystore.keyPassword\": {\n            \"secure\": true\n        }\n    },\n    \"secureDataGatewayEnabled\": false,\n    \"staticIPsEnabled\": false,\n    \"ipAddresses\": [],\n    \"loggingNgEnabled\": true,\n    \"loggingCustomLog4JEnabled\": false,\n    \"status\": \"STARTED\",\n    \"region\": \"eu-central-1\",\n    \"objectStoreV1\": false,\n    \"muleVersion\": {\n        \"version\": \"4.3.0\",\n        \"updateId\": \"5eaaf509c695f914bb42e1ea\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{anypoint_host}}/cloudhub/api/v2/applications/{{domainName}}",
					"host": [
						"{{anypoint_host}}"
					],
					"path": [
						"cloudhub",
						"api",
						"v2",
						"applications",
						"{{domainName}}"
					]
				},
				"description": "This request:\n- sets the analytics.agent.enabled = true in properties of the runtime\n \n\t    \"properties\": {\n\t        \"anypoint.platform.analytics_base_uri\": \"https://analytics-ingest.anypoint.mulesoft.com\",\n\t        \"anypoint.platform.client_id\": \"{{environment_app_id}}\",\n\t        \"anypoint.platform.client_secret\": \"{{environment_app_secret}}\",\n\t        \"anypoint.platform.base_uri\": \"{{anypoint_host}}\",\n\t        \"anypoint.platform.config.analytics.agent.enabled\": \"true\"\n\t    }"
			},
			"response": []
		},
		{
			"name": "Optional - Get List of available Policies in Anypoint Platform By default",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{access_token}}",
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
					}
				],
				"url": {
					"raw": "{{anypoint_host}}/apimanager/api/v1/organizations/:organizationId/policy-templates",
					"host": [
						"{{anypoint_host}}"
					],
					"path": [
						"apimanager",
						"api",
						"v1",
						"organizations",
						":organizationId",
						"policy-templates"
					],
					"variable": [
						{
							"key": "organizationId",
							"value": "{{org_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Optional - Add client Id policy to an existing api",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d9a9e96b-4fd8-4af8-9de0-b848ed795ff0",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"clientIdPolicyId\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"configurationData\": {\n        \"credentialsOriginHasHttpBasicAuthenticationHeader\": \"customExpression\",\n        \"clientIdExpression\": \"#[attributes.headers['client_id']]\",\n        \"clientSecretExpression\": \"#[attributes.headers['client_secret']]\"\n    },\n    \"id\": null,\n    \"pointcutData\": null,\n    \"policyTemplateId\": 299240,\n    \"apiVersionId\": \"{{apiID}}\",\n    \"groupId\": \"68ef9520-24e9-4cf2-b2f5-620025690913\",\n    \"assetId\": \"client-id-enforcement\",\n    \"assetVersion\": \"1.2.2\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{anypoint_host}}/apimanager/api/v1/organizations/:organizationId/environments/:environementId/apis/:apiid/policies",
					"host": [
						"{{anypoint_host}}"
					],
					"path": [
						"apimanager",
						"api",
						"v1",
						"organizations",
						":organizationId",
						"environments",
						":environementId",
						"apis",
						":apiid",
						"policies"
					],
					"variable": [
						{
							"key": "organizationId",
							"value": "{{org_id}}"
						},
						{
							"key": "environementId",
							"value": "{{env_id}}"
						},
						{
							"key": "apiid",
							"value": "{{apiId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Optional - Delete policy from an existing api",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "{{anypoint_host}}/apimanager/api/v1/organizations/:organizationId/environments/:environementId/apis/:apiid/policies/{{clientIdPolicyId}}",
					"host": [
						"{{anypoint_host}}"
					],
					"path": [
						"apimanager",
						"api",
						"v1",
						"organizations",
						":organizationId",
						"environments",
						":environementId",
						"apis",
						":apiid",
						"policies",
						"{{clientIdPolicyId}}"
					],
					"variable": [
						{
							"key": "organizationId",
							"value": "{{org_id}}"
						},
						{
							"key": "environementId",
							"value": "{{env_id}}"
						},
						{
							"key": "apiid",
							"value": "{{apiId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Optional - Proxy of an existing api",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{anypoint_host}}/proxies/xapi/v1/organizations/:orgId/environments/:envId/apis/:apiId/deployments/{{proxyId}}",
					"host": [
						"{{anypoint_host}}"
					],
					"path": [
						"proxies",
						"xapi",
						"v1",
						"organizations",
						":orgId",
						"environments",
						":envId",
						"apis",
						":apiId",
						"deployments",
						"{{proxyId}}"
					],
					"variable": [
						{
							"key": "orgId",
							"value": "{{org_id}}"
						},
						{
							"key": "envId",
							"value": "{{env_id}}"
						},
						{
							"key": "apiId",
							"value": "{{apiId}}"
						}
					]
				},
				"description": "Retreives the proxy api settings with proxy ip returned from the previous deploy call"
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}